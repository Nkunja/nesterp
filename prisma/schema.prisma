// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        Int       @id @default(autoincrement())
  name      String
  address     String  
  owner       String
  phoneNumber String
  location    String
  employees Employee[]
  projects  Project[]
  tasks     Task[]
  departments Department[]
  subscriptionEnd   DateTime? 
  subscriptionStatus String   @default("pending")
  transactions      Transaction[]
}

model Transaction {
  id          Int      @id @default(autoincrement())
  companyId   Int
  amount      Float
  createdAt   DateTime @default(now())
  company     Company  @relation(fields: [companyId], references: [id])
}

model Employee {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
  department  Department? @relation(fields: [departmentId], references: [id])
  departmentId Int?
  company     Company   @relation(fields: [companyId], references: [id])
  companyId   Int
  tasks       Task[]
  role        Role?    @relation(fields: [roleId], references: [id])
  roleId      Int?
}

model Department {
  id          Int        @id @default(autoincrement())
  name        String
  employees   Employee[]
  projects    Project[]
  company     Company    @relation(fields: [companyId], references: [id])
  companyId   Int
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  department  Department @relation(fields: [departmentId], references: [id])
  departmentId Int
  tasks       Task[]
  company     Company    @relation(fields: [companyId], references: [id])
  companyId   Int
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  status      String
  project     Project   @relation(fields: [projectId], references: [id])
  projectId   Int
  assignedTo  Employee? @relation(fields: [employeeId], references: [id])
  employeeId  Int?
  company     Company    @relation(fields: [companyId], references: [id])
  companyId   Int
}

model Role {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  employees Employee[]
}
